# ci/tasks/build-image.yml
# --- Concourse Task for Building a Docker Image ---

platform: linux

image_resource:
  type: docker-image
  source:
    repository: concourse/docker # This is crucial for the docker CLI
    tag: latest # Explicitly use 'latest' or a specific version like '20.10.24'

inputs:
  - name: jdk21-image-repo # Your GitHub repository content

outputs:
  - name: image # The output artifact for the built image

# These params are not strictly necessary for this run script,
# but keeping them doesn't hurt as the script handles the context itself.
params:
   DOCKERFILE_CONTEXT: jdk21-image-repo
   DOCKERFILE_PATH: jdk21-image-repo/Dockerfile

run:
  path: sh
  args:
    - -exc
    - |
      echo "--- Starting build-image task ---"
      echo "Current directory: $(pwd)"
      echo "Contents of current directory:"
      ls -la

      echo "Navigating to input repository: jdk21-image-repo"
      cd jdk21-image-repo

      echo "Contents of jdk21-image-repo:"
      ls -la

      if [ ! -f Dockerfile ]; then
        echo "ERROR: Dockerfile not found in $(pwd)/Dockerfile"
        exit 1
      fi

      echo "Attempting to build Docker image..."
      /usr/bin/docker build -t built-image:latest .
      BUILD_STATUS=$?
      if [ $BUILD_STATUS -ne 0 ]; then
        echo "ERROR: Docker build failed with exit status $BUILD_STATUS"
        exit $BUILD_STATUS
      fi
      echo "Docker image 'built-image:latest' created successfully."

      echo "Attempting to save Docker image to output artifact..."
      mkdir -p ../image # Ensure the output directory exists
      /usr/bin/docker save built-image:latest > ../image/image.tar
      SAVE_STATUS=$?
      if [ $SAVE_STATUS -ne 0 ]; then
        echo "ERROR: Docker save failed with exit status $SAVE_STATUS"
        exit $SAVE_STATUS
      fi
      echo "Image saved to ../image/image.tar."

      echo "Verifying contents of output 'image' directory:"
      ls -la ../image
      TAR_SIZE=$(stat -c%s ../image/image.tar)
      echo "Size of ../image/image.tar: $TAR_SIZE bytes"
      if [ $TAR_SIZE -eq 0 ]; then
        echo "WARNING: The image.tar file is empty!"
        exit 1
      fi

      echo "--- build-image task completed successfully ---"

